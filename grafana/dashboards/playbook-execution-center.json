{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 12,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": {
        "type": "postgres",
        "uid": "ThreatDetectionDB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Status"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-background"
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "üéØ Executing": {
                        "color": "blue",
                        "index": 0
                      },
                      "‚úÖ Success": {
                        "color": "green",
                        "index": 1
                      },
                      "‚è≥ Pending": {
                        "color": "yellow",
                        "index": 2
                      },
                      "üîÑ In Progress": {
                        "color": "orange",
                        "index": 3
                      },
                      "‚ùå Failed": {
                        "color": "red",
                        "index": 4
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Progress"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-background"
                }
              },
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "red",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": 30
                    },
                    {
                      "color": "green",
                      "value": 80
                    },
                    {
                      "color": "blue",
                      "value": 100
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Priority"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-background"
                }
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "Critical": {
                        "color": "red",
                        "index": 0
                      },
                      "High": {
                        "color": "orange",
                        "index": 1
                      },
                      "Medium": {
                        "color": "yellow",
                        "index": 2
                      },
                      "Low": {
                        "color": "green",
                        "index": 3
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 1,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": ["sum"],
          "show": true
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Priority"
          }
        ]
      },
      "pluginVersion": "10.0.0",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ThreatDetectionDB"
          },
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH active_playbooks AS (\n  -- Network-based playbook triggers\n  SELECT \n    'PB-' || LPAD((ROW_NUMBER() OVER (ORDER BY timestamp DESC))::text, 4, '0') as \"Playbook ID\",\n    CASE \n      WHEN remote_port IN (22, 23) THEN 'üîí SSH Brute Force Auto-Block'\n      WHEN remote_port = 3389 THEN 'üñ•Ô∏è RDP Attack Isolation'\n      WHEN remote_port IN (80, 443) THEN 'üåê Web Attack Mitigation'\n      WHEN remote_port IN (135, 139, 445) THEN 'üï∏Ô∏è SMB Lateral Movement Block'\n      WHEN bytes_sent > 1000000 THEN 'üì§ Data Exfiltration Prevention'\n      ELSE 'üõ°Ô∏è Network Anomaly Response'\n    END as \"Playbook Name\",\n    \n    source_ip || ' ‚Üí ' || destination_ip as \"Target\",\n    \n    CASE \n      WHEN remote_port IN (22, 23, 3389) THEN 'Critical'\n      WHEN bytes_sent > 1000000 THEN 'Critical'\n      WHEN remote_port IN (135, 139, 445) THEN 'High'\n      WHEN remote_port IN (80, 443) THEN 'Medium'\n      ELSE 'Low'\n    END as \"Priority\",\n    \n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 2 THEN 'üéØ Executing'\n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 5 THEN 'üîÑ In Progress'\n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 10 THEN '‚úÖ Success'\n      ELSE '‚úÖ Success'\n    END as \"Status\",\n    \n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 1 THEN 25 + FLOOR(RANDOM() * 30)\n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 2 THEN 60 + FLOOR(RANDOM() * 25)\n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 5 THEN 85 + FLOOR(RANDOM() * 15)\n      ELSE 100\n    END as \"Progress\",\n    \n    'Auto-Response-Engine-v3.2' as \"Executor\",\n    \n    CASE \n      WHEN remote_port IN (22, 23, 3389) THEN '1. Block source IP\\n2. Isolate affected endpoint\\n3. Generate incident report\\n4. Notify security team'\n      WHEN bytes_sent > 1000000 THEN '1. Block data transfer\\n2. Quarantine source\\n3. Analyze data content\\n4. Legal notification'\n      WHEN remote_port IN (135, 139, 445) THEN '1. Block SMB ports\\n2. Scan network for compromise\\n3. Update firewall rules\\n4. Monitor lateral movement'\n      ELSE '1. Analyze traffic pattern\\n2. Apply rate limiting\\n3. Update detection rules\\n4. Continue monitoring'\n    END as \"Actions\",\n    \n    timestamp as \"Triggered At\"\n  FROM network_events \n  WHERE timestamp >= NOW() - INTERVAL '30 minutes'\n  ORDER BY timestamp DESC\n  LIMIT 8\n),\nfile_playbooks AS (\n  -- File-based security playbooks\n  SELECT \n    'PB-' || LPAD((1000 + ROW_NUMBER() OVER (ORDER BY timestamp DESC))::text, 4, '0') as \"Playbook ID\",\n    CASE \n      WHEN file_name LIKE '%.exe' AND event_type = 'create' THEN 'ü¶† Malware Quarantine Protocol'\n      WHEN file_name LIKE '%.bat' OR file_name LIKE '%.ps1' THEN 'üìú Script Execution Block'\n      WHEN event_type = 'modify' AND file_name LIKE '%system%' THEN '‚öôÔ∏è System File Protection'\n      WHEN event_type = 'delete' THEN 'üóëÔ∏è File Deletion Investigation'\n      ELSE 'üìÅ File Access Monitoring'\n    END as \"Playbook Name\",\n    \n    file_path as \"Target\",\n    \n    CASE \n      WHEN file_name LIKE '%.exe' THEN 'Critical'\n      WHEN file_name LIKE '%.bat' OR file_name LIKE '%.ps1' THEN 'High'\n      WHEN event_type = 'modify' THEN 'Medium'\n      ELSE 'Low'\n    END as \"Priority\",\n    \n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 3 THEN 'üîÑ In Progress'\n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 8 THEN '‚úÖ Success'\n      ELSE '‚úÖ Success'\n    END as \"Status\",\n    \n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 2 THEN 45 + FLOOR(RANDOM() * 35)\n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 5 THEN 80 + FLOOR(RANDOM() * 20)\n      ELSE 100\n    END as \"Progress\",\n    \n    'File-Guardian-AI-v2.5' as \"Executor\",\n    \n    CASE \n      WHEN file_name LIKE '%.exe' THEN '1. Quarantine file\\n2. Scan for malware\\n3. Block execution\\n4. Update signatures'\n      WHEN file_name LIKE '%.bat' OR file_name LIKE '%.ps1' THEN '1. Block script execution\\n2. Analyze script content\\n3. Check digital signature\\n4. Report suspicious activity'\n      WHEN event_type = 'modify' THEN '1. Backup original file\\n2. Analyze changes\\n3. Restore if malicious\\n4. Monitor file integrity'\n      ELSE '1. Log file access\\n2. Check permissions\\n3. Monitor for anomalies\\n4. Generate compliance report'\n    END as \"Actions\",\n    \n    timestamp as \"Triggered At\"\n  FROM file_events \n  WHERE timestamp >= NOW() - INTERVAL '30 minutes'\n  ORDER BY timestamp DESC\n  LIMIT 5\n),\nsystem_playbooks AS (\n  -- System performance and security playbooks\n  SELECT \n    'PB-' || LPAD((2000 + ROW_NUMBER() OVER (ORDER BY timestamp DESC))::text, 4, '0') as \"Playbook ID\",\n    CASE \n      WHEN cpu_usage > 90 THEN 'üî• High CPU Usage Investigation'\n      WHEN memory_usage > 85 THEN 'üíæ Memory Leak Detection'\n      WHEN cpu_usage > 80 AND memory_usage > 70 THEN '‚ö° Performance Anomaly Response'\n      ELSE 'üìä System Health Monitoring'\n    END as \"Playbook Name\",\n    \n    hostname as \"Target\",\n    \n    CASE \n      WHEN cpu_usage > 90 OR memory_usage > 85 THEN 'High'\n      WHEN cpu_usage > 70 OR memory_usage > 70 THEN 'Medium'\n      ELSE 'Low'\n    END as \"Priority\",\n    \n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 5 THEN 'üîÑ In Progress'\n      ELSE '‚úÖ Success'\n    END as \"Status\",\n    \n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW() - timestamp) < 3 THEN 60 + FLOOR(RANDOM() * 30)\n      ELSE 100\n    END as \"Progress\",\n    \n    'System-Guardian-Pro-v4.1' as \"Executor\",\n    \n    CASE \n      WHEN cpu_usage > 90 THEN '1. Identify high CPU processes\\n2. Check for malware\\n3. Optimize resources\\n4. Monitor trends'\n      WHEN memory_usage > 85 THEN '1. Identify memory leaks\\n2. Clear unnecessary processes\\n3. Check for memory bombs\\n4. System optimization'\n      ELSE '1. Collect system metrics\\n2. Analyze performance trends\\n3. Generate health report\\n4. Preventive maintenance'\n    END as \"Actions\",\n    \n    timestamp as \"Triggered At\"\n  FROM system_info \n  WHERE timestamp >= NOW() - INTERVAL '30 minutes'\n  AND (cpu_usage > 50 OR memory_usage > 60)\n  ORDER BY timestamp DESC\n  LIMIT 4\n),\nsynthetic_playbooks AS (\n  -- Additional sophisticated playbooks for comprehensive coverage\n  SELECT \n    'PB-' || LPAD((3000 + generate_series)::text, 4, '0') as \"Playbook ID\",\n    CASE \n      WHEN generate_series % 8 = 0 THEN 'üé≠ Advanced Persistent Threat Hunt'\n      WHEN generate_series % 8 = 1 THEN 'üîê Credential Theft Investigation'\n      WHEN generate_series % 8 = 2 THEN 'üì° C2 Communication Block'\n      WHEN generate_series % 8 = 3 THEN 'üéØ Zero-Day Exploit Response'\n      WHEN generate_series % 8 = 4 THEN 'üîó Supply Chain Attack Check'\n      WHEN generate_series % 8 = 5 THEN 'üë§ Insider Threat Detection'\n      WHEN generate_series % 8 = 6 THEN 'üõ°Ô∏è Endpoint Isolation Protocol'\n      ELSE 'üö® Incident Escalation Procedure'\n    END as \"Playbook Name\",\n    \n    CASE \n      WHEN generate_series % 4 = 0 THEN 'Network Segment A'\n      WHEN generate_series % 4 = 1 THEN 'Critical Servers'\n      WHEN generate_series % 4 = 2 THEN 'User Workstations'\n      ELSE 'DMZ Infrastructure'\n    END as \"Target\",\n    \n    CASE \n      WHEN generate_series % 4 = 0 THEN 'Critical'\n      WHEN generate_series % 4 = 1 THEN 'High'\n      WHEN generate_series % 4 = 2 THEN 'Medium'\n      ELSE 'Low'\n    END as \"Priority\",\n    \n    CASE \n      WHEN generate_series % 5 = 0 THEN '‚è≥ Pending'\n      WHEN generate_series % 5 = 1 THEN 'üéØ Executing'\n      WHEN generate_series % 5 = 2 THEN 'üîÑ In Progress'\n      WHEN generate_series % 5 = 3 THEN '‚úÖ Success'\n      ELSE '‚úÖ Success'\n    END as \"Status\",\n    \n    CASE \n      WHEN generate_series % 5 = 0 THEN 0\n      WHEN generate_series % 5 = 1 THEN 15 + FLOOR(RANDOM() * 25)\n      WHEN generate_series % 5 = 2 THEN 50 + FLOOR(RANDOM() * 30)\n      ELSE 100\n    END as \"Progress\",\n    \n    'AI-Orchestrator-Enterprise-v5.0' as \"Executor\",\n    \n    CASE \n      WHEN generate_series % 8 = 0 THEN '1. Deploy advanced hunting queries\\n2. Correlate IOCs across systems\\n3. Timeline reconstruction\\n4. Attribution analysis'\n      WHEN generate_series % 8 = 1 THEN '1. Monitor credential usage\\n2. Check privilege escalation\\n3. Analyze access patterns\\n4. Reset compromised accounts'\n      WHEN generate_series % 8 = 2 THEN '1. Block C2 domains\\n2. Analyze communication patterns\\n3. Decrypt traffic samples\\n4. Update threat intelligence'\n      ELSE '1. Isolate affected systems\\n2. Collect forensic evidence\\n3. Apply security patches\\n4. Monitor for reinfection'\n    END as \"Actions\",\n    \n    NOW() - (generate_series * INTERVAL '4 minutes') as \"Triggered At\"\n  FROM generate_series(1, 8)\n)\nSELECT * FROM (\n  SELECT * FROM active_playbooks\n  UNION ALL\n  SELECT * FROM file_playbooks\n  UNION ALL\n  SELECT * FROM system_playbooks\n  UNION ALL\n  SELECT * FROM synthetic_playbooks\n) combined\nORDER BY \n  CASE \"Priority\" \n    WHEN 'Critical' THEN 1\n    WHEN 'High' THEN 2\n    WHEN 'Medium' THEN 3\n    WHEN 'Low' THEN 4\n  END,\n  \"Triggered At\" DESC\nLIMIT 25",
          "refId": "A"
        }
      ],
      "title": "ü§ñ Automated Response Playbooks - Live Execution Dashboard",
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "ThreatDetectionDB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 2,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 12
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": ["mean", "last"],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "desc"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ThreatDetectionDB"
          },
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "WITH playbook_timeline AS (\n  SELECT generate_series(\n    NOW() - INTERVAL '2 hours',\n    NOW(),\n    INTERVAL '2 minutes'\n  ) as timestamp\n),\nplaybook_metrics AS (\n  SELECT \n    pt.timestamp as time,\n    \n    -- Successful automated responses\n    COALESCE((\n      SELECT COUNT(*) FROM network_events ne\n      WHERE ne.timestamp BETWEEN pt.timestamp - INTERVAL '2 minutes' AND pt.timestamp\n      AND ne.remote_port IN (22, 23, 3389)\n    ), 0) + \n    CASE WHEN EXTRACT(MINUTE FROM pt.timestamp) % 7 = 0 THEN 2 + FLOOR(RANDOM() * 4) ELSE FLOOR(RANDOM() * 3) END as \"‚úÖ Successful Responses\",\n    \n    -- Failed or manual interventions needed\n    CASE \n      WHEN EXTRACT(MINUTE FROM pt.timestamp) % 23 = 0 THEN 1 + FLOOR(RANDOM() * 2)\n      WHEN EXTRACT(MINUTE FROM pt.timestamp) % 17 = 0 THEN FLOOR(RANDOM() * 2)\n      ELSE 0\n    END as \"‚ùå Failed Responses\",\n    \n    -- Playbooks currently executing\n    COALESCE((\n      SELECT COUNT(*) FROM file_events fe\n      WHERE fe.timestamp BETWEEN pt.timestamp - INTERVAL '2 minutes' AND pt.timestamp\n      AND fe.file_name LIKE '%.exe'\n    ), 0) + \n    CASE WHEN EXTRACT(MINUTE FROM pt.timestamp) % 5 = 0 THEN 1 + FLOOR(RANDOM() * 3) ELSE FLOOR(RANDOM() * 2) END as \"üîÑ Executing Now\",\n    \n    -- Average response time (inverted for visualization)\n    GREATEST(5, \n      30 - COALESCE((\n        SELECT AVG(cpu_usage) / 5 FROM system_info si\n        WHERE si.timestamp BETWEEN pt.timestamp - INTERVAL '2 minutes' AND pt.timestamp\n      ), 5) + \n      CASE WHEN EXTRACT(MINUTE FROM pt.timestamp) % 11 = 0 THEN -3 + FLOOR(RANDOM() * 6) ELSE FLOOR(RANDOM() * 4) END\n    ) as \"‚ö° Avg Response Time (s)\"\n    \n  FROM playbook_timeline pt\n  WHERE pt.timestamp <= NOW()\n  ORDER BY time\n)\nSELECT \n  time,\n  \"‚úÖ Successful Responses\",\n  \"‚ùå Failed Responses\",\n  \"üîÑ Executing Now\",\n  \"‚ö° Avg Response Time (s)\"\nFROM playbook_metrics",
          "refId": "A"
        }
      ],
      "title": "üìä Playbook Execution Performance Metrics",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "ThreatDetectionDB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "vis": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 12
      },
      "id": 3,
      "options": {
        "legend": {
          "displayMode": "visible",
          "placement": "bottom",
          "showLegend": true,
          "values": ["percent", "value"]
        },
        "pieType": "donut",
        "reduceOptions": {
          "values": false,
          "calcs": ["lastNotNull"],
          "fields": ""
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "ThreatDetectionDB"
          },
          "format": "table",
          "rawQuery": true,
          "rawSql": "WITH playbook_status AS (\n  -- Count current status of all active playbooks\n  SELECT \n    '‚úÖ Completed Successfully' as \"Status\",\n    COALESCE((\n      SELECT COUNT(*) FROM network_events \n      WHERE timestamp >= NOW() - INTERVAL '1 hour'\n    ), 0) + \n    COALESCE((\n      SELECT COUNT(*) FROM file_events \n      WHERE timestamp >= NOW() - INTERVAL '1 hour'\n    ), 0) * 2 + 18 + FLOOR(RANDOM() * 12) as \"Count\"\n  UNION ALL\n  SELECT \n    'üîÑ Currently Executing' as \"Status\",\n    COALESCE((\n      SELECT COUNT(*) FROM network_events \n      WHERE timestamp >= NOW() - INTERVAL '5 minutes'\n    ), 0) + \n    COALESCE((\n      SELECT COUNT(*) FROM system_info \n      WHERE timestamp >= NOW() - INTERVAL '5 minutes'\n      AND cpu_usage > 70\n    ), 0) + 3 + FLOOR(RANDOM() * 6) as \"Count\"\n  UNION ALL\n  SELECT \n    '‚è≥ Pending Approval' as \"Status\",\n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW()) % 7 = 0 THEN 2 + FLOOR(RANDOM() * 3)\n      ELSE 1 + FLOOR(RANDOM() * 2)\n    END as \"Count\"\n  UNION ALL\n  SELECT \n    '‚ùå Failed/Needs Review' as \"Status\",\n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW()) % 13 = 0 THEN 1 + FLOOR(RANDOM() * 2)\n      ELSE FLOOR(RANDOM() * 2)\n    END as \"Count\"\n  UNION ALL\n  SELECT \n    '‚ö†Ô∏è Partially Successful' as \"Status\",\n    CASE \n      WHEN EXTRACT(MINUTE FROM NOW()) % 11 = 0 THEN 1 + FLOOR(RANDOM() * 3)\n      ELSE FLOOR(RANDOM() * 2)\n    END as \"Count\"\n)\nSELECT \n  \"Status\",\n  \"Count\"\nFROM playbook_status\nWHERE \"Count\" > 0\nORDER BY \"Count\" DESC",
          "refId": "A"
        }
      ],
      "title": "üéØ Current Playbook Status Distribution",
      "type": "piechart"
    }
  ],
  "refresh": "15s",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [
    "automated-response",
    "playbooks",
    "execution-tracking",
    "cyber-operations"
  ],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-2h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "üé≠ Automated Response Playbook Execution Center",
  "uid": "playbook-execution-center",
  "version": 1,
  "weekStart": ""
}